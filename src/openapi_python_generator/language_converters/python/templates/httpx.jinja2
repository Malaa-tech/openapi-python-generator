{%  if async_client %}async {% endif %}def {{ operation_id }}(self, {{ params }} api_config_override : Optional[APIConfig] = None) -> {% if return_type.type is none or return_type.type.converted_type is none %}None{% else %}{{ return_type.type.converted_type}}{% endif %}:
    api_config = api_config_override if api_config_override else self.config
    x_interaction_id=self.set_interaction_id(x_interaction_id)
    client_id=api_config.client_id
    client_secret=api_config.client_secret

    base_path = api_config.base_path
    path = f'{{ path_name }}'
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        {{ header_params | join(',\n') | safe }}
    }
    query_params : Dict[str,Any] = {
    {% if query_params|length > 0 %}
        {{ query_params | join(',\n') | safe }}
    {% endif %}
    }

    query_params = {key:value for (key,value) in query_params.items() if value is not None}

    filtered_headers = {key:value for (key,value) in headers.items() if value is not None}

    {% if async_client %}
async with httpx.AsyncClient(base_url=base_path, verify=api_config.verify, timeout=api_config.timeout) as client:
        response = await client.request(
    {% else %}
with httpx.Client(base_url=base_path, verify=api_config.verify, timeout=api_config.timeout) as client:
        response = client.request(
    {% endif %}
        '{{ method }}',
        httpx.URL(path),
        headers=filtered_headers,
        params=query_params,
        {% if body_param %}
        {% if use_orjson %}
        content=orjson.dumps({{ body_param }})
        {% else %}
        json = {{ body_param }}
        {% endif %}
        {% endif %}
    )

    if response.status_code != {{ return_type.status_code }}:
        raise HTTPException(response=response)

{% if return_type.type is none or return_type.type.converted_type is none %}
    return None
{% elif return_type.type is not none and return_type.type.converted_type == "str" %}
    return response.text
{% elif return_type.complex_type %}
    {%- if return_type.list_type is none %}
    return {{ return_type.type.converted_type }}(**response.json()) if response.json() is not None else {{ return_type.type.converted_type }}()
    {%- else %}
    return [{{ return_type.list_type }}(**item) for item in response.json()]
    {%- endif %}
{% else %}
    return response.json()
{% endif %}
